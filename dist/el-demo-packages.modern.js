const e=e=>"number"==typeof e||e&&"."!==e?e.toString():"",r=r=>e(r).replace(/\D/g,"").replace(/(\d+?)(?=(\d\d)+(\d)(?!\d))(\.\d+)?/g,"$1, "),n=r=>{r=e(r).replace(/, /g,"");const n=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"],t=["Ten","Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"],s=["","Ten","Twenty","Thirty","Forty","Fifty","Sixty","Seventy","Eighty","Ninety"],a=(e,r)=>0===e?"":` ${1===e&&t[r]||s[e]}`,u=(e,r,t)=>(0!=e&&1!=r?` ${n[e]}`:"")+(0!=r||e>0?` ${t}`:"");let h="",i=0,c=0,p=0;const o=[];if(r+="",Number.isNaN(parseInt(r,10)))return h="",h;if(parseInt(r,10)>0&&r.length<=10){for(i=r.length-1;i>=0;i-=1)switch(c=r[i]-0,p=i>0?r[i-1]-0:0,r.length-i-1){case 0:o.push(u(c,p,""));break;case 1:case 4:case 6:case 8:o.push(a(c,r[i+1]));break;case 2:o.push(0!=c?` ${n[c]} Hundred${0!=r[i+1]&&0!=r[i+2]?" and":""}`:"");break;case 3:o.push(u(c,p,"Thousand"));break;case 5:o.push(u(c,p,"Lakh"));break;case 7:o.push(u(c,p,"Crore"));break;case 9:o.push(0!=c?` ${n[c]} Hundred${0!=r[i+1]||0!=r[i+2]?" and":" Crore"}`:"");break;default:o.push("")}return h=o.reverse().join(""),""!==h?`${h} rupees`:""}return h="",""!==h?`${h} rupees`:""};export{r as amountToThousandSeparator,n as toINRWords,e as transformNullToString};
//# sourceMappingURL=el-demo-packages.modern.js.map
